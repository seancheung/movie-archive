{
  // Place your movie-archive workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "React Component": {
    "scope": "typescriptreact",
    "prefix": "rc",
    "body": ["export default function ${1:$TM_FILENAME_BASE}() {", "\t$0", "}"],
    "description": "React component",
  },
  "React Component with Props": {
    "scope": "typescriptreact",
    "prefix": "rcp",
    "body": [
      "interface ${1:$TM_FILENAME_BASE}Props {",
      "\tchildren?: React.ReactNode",
      "}",
      "",
      "export default function $1(props: $1Props) {",
      "\t$0",
      "}",
    ],
    "description": "React component with props",
  },
  "React Client Component": {
    "scope": "typescriptreact",
    "prefix": "rcc",
    "body": [
      "\"use client\"",
      "",
      "export default function ${1:$TM_FILENAME_BASE}() {",
      "\t$0",
      "}",
    ],
    "description": "React client component",
  },
  "React Client Component With Props": {
    "scope": "typescriptreact",
    "prefix": "rccp",
    "body": [
      "\"use client\"",
      "",
      "interface ${1:$TM_FILENAME_BASE}Props {",
      "\tchildren?: React.ReactNode",
      "}",
      "",
      "export default function $1(props: $1Props) {",
      "\t$0",
      "}",
    ],
    "description": "React client component with props",
  },
}
